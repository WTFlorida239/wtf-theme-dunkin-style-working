{% comment %}
  THC Drinks builder (AJAX cart)
  - Variant ID: page.metafields.custom.thc_drink_variant_id OR settings.thc_drinks_variant_id
  - Pumps: Medium 4, Large 6 (extra pumps charged)
{% endcomment %}
{% assign thc_variant_id = page.metafields.custom.thc_drink_variant_id
  | default: settings.thc_drinks_variant_id
  | default: 0
%}

{% assign price_medium = page.metafields.custom.thc_price_medium
  | default: settings.thc_price_medium
  | default: '9.00'
%}
{% assign price_large = page.metafields.custom.thc_price_large | default: settings.thc_price_large | default: '15.00' %}
{% assign price_gallon = page.metafields.custom.thc_price_gallon
  | default: settings.thc_price_gallon
  | default: '100.00'
%}
{% assign extra_pump_price = page.metafields.custom.extra_pump_price
  | default: settings.thc_extra_pump_price
  | default: '0.50'
%}

<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>THC Drinks - WTF | Welcome To Florida</title>
    <style>
      /* same styles as kava page for consistency */
    </style>
  </head>
  <body>
    <div class="header">WTF | Welcome To Florida</div>
    <div class="container">
      <a class="back" href="/">‚Üê Back to Menu</a>
      <div class="grid">
        <img class="img" src="{{ 'delta9_drinks_150x150.png' | asset_url }}" alt="THC Drinks">
        <div class="card">
          <h1 class="title">THC Drinks</h1>
          <div class="price">
            Total: <span id="live-price">${{ price_medium }}</span>
          </div>
          <p>
            <b>Age verification required.</b> Medium includes 4 pumps, Large includes 6. Extra pumps cost
            <b>${{ extra_pump_price }}</b> each.
          </p>

          <div class="section">
            <h3>‚òï Size</h3>
            <div class="grid-sm" id="size">
              <button class="pill" data-size="Medium" data-price="{{ price_medium }}">
                Medium ‚Äî ${{ price_medium }}
              </button>
              <button class="pill" data-size="Large" data-price="{{ price_large }}">Large ‚Äî ${{ price_large }}</button>
              <button class="pill" data-size="Gallon" data-price="{{ price_gallon }}">
                Gallon ‚Äî ${{ price_gallon }}
              </button>
            </div>
          </div>

          <div class="section">
            <h3>üç¨ Flavors</h3>
            <div class="note">We‚Äôll split included pumps across selected flavors.</div>
            <div class="grid-flavors" id="flavors">
              {% assign thc_flavors = 'Lemon,Lime,Orange,Strawberry,Raspberry,Blueberry,Sour Apple,Dragon Fruit,Blackberry,Cranberry,Grenadine,Chocolate,Caramel,Maple,Agave,Passion Fruit,Hibiscus'
                | split: ','
              %}
              {% for f in thc_flavors -%}
                <button class="flv" data-flavor="{{ f | escape }}">{{ f }}</button>
              {%- endfor %}
            </div>
            <div id="pump-dist" class="note" style="display:none;margin-top:8px"></div>
          </div>

          <div class="section">
            <h3>‚ûï Extra Pumps (${{ extra_pump_price }} each)</h3>
            <div class="qty">
              <button class="btn" data-extra="-1">‚àí</button>
              <input id="extra" type="number" min="0" value="0">
              <button class="btn" data-extra="1">+</button>
              <strong id="extra-cost"></strong>
            </div>
          </div>

          <div class="section">
            <h3>üí¨ Comments</h3>
            <textarea id="comments" rows="3" placeholder="Any special requests?"></textarea>
          </div>
          <div class="section">
            <h3>üî¢ Quantity</h3>
            <div class="qty">
              <button class="btn" data-qty="-1">‚àí</button>
              <input id="qty" type="number" min="1" value="1">
              <button class="btn" data-qty="1">+</button>
            </div>
          </div>

          <button id="add" class="cta">Add to Cart</button>
          <div id="ok" class="success"></div>
        </div>
      </div>
    </div>

    <script>
      (function () {
        const VARIANT = Number('{{ thc_variant_id }}') || 0;
        const PRICE = {
          Medium: Number('{{ price_medium }}') || 9,
          Large: Number('{{ price_large }}') || 15,
          Gallon: Number('{{ price_gallon }}') || 100,
        };
        const INCLUDED = { Medium: 4, Large: 6, Gallon: 0 };
        const EXTRA_PRICE = Number('{{ extra_pump_price }}') || 0.5;

        let size = 'Medium',
          qty = 1,
          extra = 0,
          flavors = new Set();

        const $live = document.getElementById('live-price'),
          $extra = document.getElementById('extra'),
          $extraCost = document.getElementById('extra-cost'),
          $qty = document.getElementById('qty'),
          $dist = document.getElementById('pump-dist'),
          $ok = document.getElementById('ok');

        function money(n) {
          return '$' + (Math.round(n * 100) / 100).toFixed(2);
        }
        function unit() {
          return (PRICE[size] || 0) + extra * EXTRA_PRICE;
        }
        function render() {
          $live.textContent = money(unit() * qty);
          $extraCost.textContent = extra > 0 ? '(+' + money(extra * EXTRA_PRICE) + ')' : '';
          document.getElementById('add').textContent = 'Add to Cart ‚Äî ' + money(unit() * qty);
        }
        function renderDist() {
          const list = [...flavors];
          if (!list.length || !INCLUDED[size]) {
            $dist.style.display = 'none';
            return;
          }
          const total = INCLUDED[size],
            per = Math.floor(total / list.length),
            rem = total % list.length;
          let html = '<b>üéØ Pump Distribution</b><br>';
          list.forEach((f, i) => {
            const p = per + (i < rem ? 1 : 0);
            html += `‚Ä¢ ${f}: ${p} pump${p !== 1 ? 's' : ''}<br>`;
          });
          $dist.innerHTML = html;
          $dist.style.display = 'block';
        }

        document.getElementById('size').addEventListener('click', (e) => {
          const b = e.target.closest('[data-size]');
          if (!b) return;
          document.querySelectorAll('#size .pill').forEach((x) => x.classList.remove('selected'));
          b.classList.add('selected');
          size = b.dataset.size;
          render();
          renderDist();
        });
        document.querySelector('#size [data-size="Medium"]').click();

        document.getElementById('flavors').addEventListener('click', (e) => {
          const b = e.target.closest('[data-flavor]');
          if (!b) return;
          const v = b.dataset.flavor;
          if (b.classList.contains('selected')) {
            b.classList.remove('selected');
            flavors.delete(v);
          } else {
            b.classList.add('selected');
            flavors.add(v);
          }
          renderDist();
          render();
        });

        document.querySelectorAll('[data-extra]').forEach((b) =>
          b.addEventListener('click', () => {
            extra = Math.max(0, (Number($extra.value) || 0) + Number(b.dataset.extra));
            $extra.value = extra;
            render();
          })
        );
        $extra.addEventListener('input', () => {
          extra = Math.max(0, Number($extra.value) || 0);
          $extra.value = extra;
          render();
        });

        document.querySelectorAll('[data-qty]').forEach((b) =>
          b.addEventListener('click', () => {
            qty = Math.max(1, (Number($qty.value) || 1) + Number(b.dataset.qty));
            $qty.value = qty;
            render();
          })
        );
        $qty.addEventListener('input', () => {
          qty = Math.max(1, Number($qty.value) || 1);
          $qty.value = qty;
          render();
        });

        document.getElementById('add').addEventListener('click', async () => {
          if (!VARIANT) {
            alert('Set a THC Drink Variant ID first.');
            return;
          }
          if (!flavors.size) {
            alert('Pick at least one flavor.');
            return;
          }
          const props = {
            Size: size,
            Flavors: [...flavors].join(', '),
            'Included Pumps': String(INCLUDED[size] || 0),
            'Extra Pumps': String(extra),
            'Pump Distribution': $dist.innerText || '',
            Comments: document.getElementById('comments').value.trim(),
          };
          const btn = this;
          btn.disabled = true;
          btn.textContent = 'Adding‚Ä¶';
          try {
            await WTF.addToCart({ id: VARIANT, quantity: qty, properties: props });
            $ok.textContent = '‚úÖ THC drink added to cart!';
            $ok.classList.add('show');
            setTimeout(() => {
              $ok.classList.remove('show');
            }, 2500);
          } catch (e) {
            console.error(e);
            alert('Add failed.');
          }
          btn.disabled = false;
          render();
        });

        render();
      })();
    </script>
  </body>
</html>
