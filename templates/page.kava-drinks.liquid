<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Kava Drinks - WTF | Welcome To Florida</title>

    <style>
      * { box-sizing: border-box; margin: 0; padding: 0; }
      body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; background:#f8f9fa; line-height:1.6; color:#333; }
      .header { background:#ff6600; color:#fff; padding:15px 0; text-align:center; font-size:24px; font-weight:800; }
      .container { max-width:1200px; margin:0 auto; padding:20px; }
      .back-link { display:inline-block; color:#ff6600; text-decoration:none; font-weight:700; font-size:16px; margin-bottom:20px; padding:10px 15px; border:2px solid #ff6600; border-radius:5px; transition:all .2s ease; }
      .back-link:hover { background:#ff6600; color:#fff; }

      .product-grid { display:grid; grid-template-columns: 1fr 1fr; gap:40px; align-items:flex-start; }
      .product-image { width:100%; max-width:400px; border-radius:10px; box-shadow:0 4px 15px rgba(0,0,0,.1); height:auto; }
      .product-details { background:#fff; padding:30px; border-radius:10px; box-shadow:0 4px 15px rgba(0,0,0,.1); }

      .product-title { font-size:32px; font-weight:800; margin-bottom:8px; }
      .product-sub { color:#666; margin-bottom:18px; }
      .product-price { font-size:20px; color:#ff6600; font-weight:800; margin-bottom:14px; }

      .selection-section { margin:26px 0; border-bottom:1px solid #eee; padding-bottom:18px; }
      .selection-section:last-child { border-bottom:none; }
      .section-title { font-size:18px; font-weight:800; margin-bottom:12px; }
      .info-box { background:#e7f3ff; padding:12px; border-radius:8px; margin-bottom:12px; font-size:14px; }

      .chip-row { display:flex; flex-wrap:wrap; gap:8px; }
      .chip { appearance:none; border:2px solid #ddd; background:#fff; border-radius:999px; padding:8px 12px; font-weight:700; cursor:pointer; transition:border-color .12s ease, box-shadow .12s ease, transform .12s ease; }
      .chip:hover { border-color:#ff6600; transform:translateY(-1px); box-shadow:0 2px 6px rgba(255,102,0,.18); }
      .chip.is-selected { border-color:#ff6600; box-shadow:0 0 0 2px color-mix(in srgb, #ff6600 25%, transparent); }

      .flavor-grid { display:grid; grid-template-columns: repeat(auto-fit, minmax(140px, 1fr)); gap:8px; }
      .flavor { border:2px solid #ddd; background:#fff; border-radius:8px; padding:12px 10px; font-weight:600; cursor:pointer; text-align:center; transition:border-color .12s ease, box-shadow .12s ease, transform .12s ease; }
      .flavor:hover { border-color:#28a745; transform:translateY(-1px); }
      .flavor.is-selected { background:#28a745; color:#fff; border-color:#28a745; }

      .quantity-controls { display:flex; align-items:center; gap:12px; }
      .qty-btn { width:40px; height:40px; border:2px solid #ff6600; background:#fff; color:#ff6600; border-radius:50%; cursor:pointer; font-size:18px; font-weight:800; transition:all .12s ease; }
      .qty-btn:hover { background:#ff6600; color:#fff; transform:scale(1.08); }
      .qty-input { width:80px; text-align:center; padding:10px; border:2px solid #ddd; border-radius:5px; font-size:16px; }

      .comments-textarea { width:100%; padding:12px; border:2px solid #ddd; border-radius:5px; resize:vertical; font-size:14px; line-height:1.4; }
      .comments-textarea:focus { border-color:#ff6600; outline:none; }

      .add-to-cart-btn { width:100%; padding:18px; background:#ff6600; color:#fff; border:none; border-radius:8px; font-size:18px; font-weight:800; cursor:pointer; margin-top:18px; transition:transform .12s ease, box-shadow .12s ease, background .12s ease; }
      .add-to-cart-btn:hover { background:#e55a00; transform: translateY(-2px); box-shadow:0 4px 12px rgba(255,102,0,0.3); }
      .add-to-cart-btn:disabled { background:#ccc; cursor:not-allowed; transform:none; box-shadow:none; }

      .success-message { background:#d4edda; color:#155724; padding:14px; border-radius:6px; margin:14px 0; border:1px solid #c3e6cb; display:none; font-size:14px; }
      .success-message.show { display:block; }

      .cart-status { position:fixed; top:20px; right:20px; background:#ff6600; color:#fff; padding:10px 15px; border-radius:25px; font-weight:700; z-index:1000; box-shadow:0 4px 12px rgba(255,102,0,0.3); }

      @media (max-width: 768px) {
        .product-grid { grid-template-columns:1fr; gap:24px; }
        .product-details { padding:20px; }
      }
      @media (prefers-reduced-motion: reduce) {
        .back-link, .chip, .flavor, .qty-btn, .add-to-cart-btn { transition:none !important; }
      }
      .sr-only { position:absolute!important; width:1px; height:1px; overflow:hidden; clip:rect(1px,1px,1px,1px); white-space:nowrap; }
    </style>

    <!-- Settings / per-page override: use a single variant to add to cart and send Flavor/Size as properties -->
    <script>
      window.KAVA_DRINK_VARIANT_ID = {{ page.metafields.custom.kava_variant_id | default: settings.kava_drink_variant_id | json }};
    </script>
  </head>

  <body>
    <div class="header">WTF | Welcome To Florida</div>
    <div class="cart-status" id="cart-status" aria-live="polite">
      Cart: <span id="cart-count">{{ cart.item_count }}</span> items
    </div>

    <div class="container">
      <a href="/" class="back-link">‚Üê Back to Menu</a>

      <div class="product-grid">
        <div class="product-image-section">
          <!-- single required image -->
          <img
            src="{{ 'kava_drinks_150x150.png' | asset_url }}"
            alt="Kava Drinks"
            class="product-image"
            width="400"
            height="400"
            loading="eager"
            fetchpriority="high"
          >
        </div>

        <div class="product-details">
          <h1 class="product-title">Kava Drinks</h1>
          <p class="product-sub">Pick a flavor, choose your size, add to cart.</p>

          <!-- Size chips: Large 16 oz & Gallon -->
          <div class="selection-section">
            <h3 class="section-title">ü•§ Size</h3>
            <div class="chip-row" role="group" aria-label="Size">
              <button type="button" class="chip is-selected" data-size="Large 16 oz">Large 16 oz</button>
              <button type="button" class="chip" data-size="Gallon">Gallon</button>
            </div>
          </div>

          <!-- Flavor grid (from your spreadsheet ‚ÄúKava Drinks‚Äù column) -->
          <div class="selection-section">
            <h3 class="section-title">üå∫ Flavor</h3>
            <div class="flavor-grid" id="kava-flavor-grid" role="group" aria-label="Kava flavors">
              <!-- generated buttons -->
              <button type="button" class="flavor" data-flavor="Lemon">Lemon</button>
              <button type="button" class="flavor" data-flavor="Lime">Lime</button>
              <button type="button" class="flavor" data-flavor="Orange">Orange</button>
              <button type="button" class="flavor" data-flavor="Blood Orange">Blood Orange</button>
              <button type="button" class="flavor" data-flavor="Strawberry">Strawberry</button>
              <button type="button" class="flavor" data-flavor="Rasberry">Rasberry</button>
              <button type="button" class="flavor" data-flavor="Blueberry">Blueberry</button>
              <button type="button" class="flavor" data-flavor="Coconut">Coconut</button>
              <button type="button" class="flavor" data-flavor="Mango">Mango</button>
              <button type="button" class="flavor" data-flavor="Watermelon">Watermelon</button>
              <button type="button" class="flavor" data-flavor="Simple Syrup">Simple Syrup</button>
              <button type="button" class="flavor" data-flavor="Sour Apple">Sour Apple</button>
              <button type="button" class="flavor" data-flavor="Dragon Fruit">Dragon Fruit</button>
              <button type="button" class="flavor" data-flavor="Blackberry">Blackberry</button>
              <button type="button" class="flavor" data-flavor="Smores">Smores</button>
              <button type="button" class="flavor" data-flavor="Pumpkin Spice">Pumpkin Spice</button>
              <button type="button" class="flavor" data-flavor="Cranberry">Cranberry</button>
              <button type="button" class="flavor" data-flavor="Grenadine">Grenadine</button>
              <button type="button" class="flavor" data-flavor="Lavender">Lavender</button>
              <button type="button" class="flavor" data-flavor="Chocolate">Chocolate</button>
              <button type="button" class="flavor" data-flavor="Caramel">Caramel</button>
              <button type="button" class="flavor" data-flavor="Maple">Maple</button>
              <button type="button" class="flavor" data-flavor="Agave">Agave</button>
              <button type="button" class="flavor" data-flavor="Hazelnut">Hazelnut</button>
              <button type="button" class="flavor" data-flavor="Rose">Rose</button>
              <button type="button" class="flavor" data-flavor="Passion Fruit">Passion Fruit</button>
              <button type="button" class="flavor" data-flavor="Hibiscus">Hibiscus</button>
              <button type="button" class="flavor" data-flavor="Creamer">Creamer</button>
              <button type="button" class="flavor" data-flavor="Oat Milk">Oat Milk</button>
            </div>
          </div>

          <!-- Comments -->
          <div class="selection-section">
            <h3 class="section-title">üí¨ Special Requests & Comments</h3>
            <label for="order-comments" class="sr-only">Order comments</label>
            <textarea
              id="order-comments"
              class="comments-textarea"
              placeholder="Any special requests or modifications? We'll try to accommodate!"
              rows="3"
            ></textarea>
          </div>

          <!-- Quantity -->
          <div class="selection-section">
            <h3 class="section-title">üî¢ Quantity</h3>
            <div class="quantity-controls">
              <button type="button" class="qty-btn" aria-label="Decrease quantity" onclick="changeQty(-1)">‚àí</button>
              <input
                type="number"
                id="quantity"
                value="1"
                min="1"
                max="50"
                class="qty-input"
                inputmode="numeric"
                pattern="[0-9]*"
              >
              <button type="button" class="qty-btn" aria-label="Increase quantity" onclick="changeQty(1)">+</button>
            </div>
          </div>

          <div id="success-message" class="success-message" role="status" aria-live="polite"></div>

          <button type="button" id="add-to-cart-btn" class="add-to-cart-btn" onclick="addToCart()" disabled>
            Select a Flavor
          </button>
        </div>
      </div>
    </div>

    <script>
      // Currency display (optional; not showing prices by default)
      const moneyFmt = new Intl.NumberFormat(undefined, { style: 'currency', currency: 'USD' });

      let selectedSize = 'Large 16 oz';
      let selectedFlavor = null;

      document.addEventListener('DOMContentLoaded', () => {
        // Size chips
        document.querySelectorAll('.chip[data-size]').forEach((chip) => {
          chip.addEventListener('click', () => {
            document.querySelectorAll('.chip[data-size]').forEach((c) => c.classList.remove('is-selected'));
            chip.classList.add('is-selected');
            selectedSize = chip.getAttribute('data-size');
            updateCTA();
          });
        });

        // Flavor buttons
        document.querySelectorAll('.flavor').forEach((btn) => {
          btn.addEventListener('click', () => {
            document.querySelectorAll('.flavor').forEach((b) => b.classList.remove('is-selected'));
            btn.classList.add('is-selected');
            selectedFlavor = btn.getAttribute('data-flavor');
            updateCTA();
          });
          btn.addEventListener('keydown', (e) => {
            if (e.key === 'Enter' || e.key === ' ') {
              e.preventDefault();
              btn.click();
            }
          });
        });

        // Restore last flavor if user returns
        const savedFlavor = sessionStorage.getItem('kava_flavor');
        if (savedFlavor) {
          const el = [...document.querySelectorAll('.flavor')].find(
            (b) => b.getAttribute('data-flavor') === savedFlavor
          );
          if (el) el.click();
        }
      });

      function changeQty(delta) {
        const input = document.getElementById('quantity');
        const next = Math.max(1, Math.min(50, (parseInt(input.value, 10) || 1) + delta));
        input.value = next;
        updateCTA();
      }

      function updateCTA() {
        const btn = document.getElementById('add-to-cart-btn');
        if (selectedFlavor) {
          const qty = Math.max(1, Math.min(50, parseInt(document.getElementById('quantity').value || '1', 10)));
          btn.textContent = `Add to Cart ‚Äî ${selectedSize} √ó ${qty}`;
          btn.disabled = false;
          sessionStorage.setItem('kava_flavor', selectedFlavor);
        } else {
          btn.textContent = 'Select a Flavor';
          btn.disabled = true;
        }
      }

      async function updateCartCount() {
        try {
          const res = await fetch('/cart.js', { credentials: 'same-origin' });
          if (res.ok) {
            const cart = await res.json();
            document.getElementById('cart-count').textContent = cart.item_count || 0;
          }
        } catch (e) {}
      }

      async function addToCart() {
        if (!selectedFlavor) {
          alert('Please select a flavor.');
          return;
        }

        const btn = document.getElementById('add-to-cart-btn');
        const original = btn.textContent;
        btn.textContent = '‚è≥ Adding...';
        btn.disabled = true;

        const variantId = window.KAVA_DRINK_VARIANT_ID;
        const quantity = Math.max(1, Math.min(50, parseInt(document.getElementById('quantity').value || '1', 10)));
        const comments = (document.getElementById('order-comments').value || '').trim();

        const properties = { Flavor: selectedFlavor, Size: selectedSize };
        if (comments) properties.Comments = comments;

        try {
          if (variantId) {
            const body = new URLSearchParams();
            body.set('id', String(variantId));
            body.set('quantity', String(quantity));
            for (const k in properties) body.set(`properties[${k}]`, String(properties[k]));
            const res = await fetch('/cart/add.js', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
                Accept: 'application/json',
              },
              credentials: 'same-origin',
              body,
            });
            if (!res.ok) {
              let msg = 'Add to cart failed';
              try {
                const data = await res.json();
                msg = data.description || data.message || msg;
              } catch {}
              throw new Error(msg);
            }
          } else {
            // Dev fallback if no variant configured
            const order = {
              id: 'kava-' + Date.now() + '-' + Math.random().toString(36).slice(2),
              product: 'Kava Drink',
              ...properties,
              quantity,
              timestamp: new Date().toISOString(),
            };
            let cart = [];
            try {
              cart = JSON.parse(localStorage.getItem('wtf-cart') || '[]');
            } catch {}
            cart.push(order);
            localStorage.setItem('wtf-cart', JSON.stringify(cart));
          }

          await updateCartCount();

          const success = document.getElementById('success-message');
          success.innerHTML =
            `‚úÖ <strong>Added to cart!</strong><br>
             üå∫ Flavor: <strong>${properties.Flavor}</strong><br>
             ü•§ Size: ${properties.Size}<br>
             üî¢ Qty: ${quantity}` + (comments ? `<br>üí¨ ${comments}` : '');
          success.classList.add('show');
          success.scrollIntoView({ behavior: 'smooth', block: 'center' });

          document.dispatchEvent(new CustomEvent('kava:added', { detail: { variantId, ...properties, quantity } }));
        } catch (err) {
          console.error('Add to cart error:', err);
          alert('‚ùå ' + (err && err.message ? err.message : 'Error adding to cart. Please try again.'));
        } finally {
          setTimeout(() => {
            btn.textContent = original;
            btn.disabled = false;
            document.getElementById('success-message').classList.remove('show');
          }, 4000);
        }
      }
    </script>
  </body>
</html>
