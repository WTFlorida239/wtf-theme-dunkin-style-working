<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>THC Shots - WTF | Welcome To Florida</title>
    <style>
      * { box-sizing: border-box; margin: 0; padding: 0; }
      body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; background: #f8f9fa; line-height: 1.6; }
      .header { background: #ff6600; color: white; padding: 15px 0; text-align: center; font-size: 24px; font-weight: bold; }
      .container { max-width: 1200px; margin: 0 auto; padding: 20px; }
      .back-link { display: inline-block; color: #ff6600; text-decoration: none; font-weight: bold; font-size: 16px; margin-bottom: 20px; padding: 10px 15px; border: 2px solid #ff6600; border-radius: 5px; transition: all 0.3s ease; }
      .back-link:hover { background: #ff6600; color: white; }
      .product-grid { display: grid; grid-template-columns: 1fr 1fr; gap: 40px; align-items: start; }
      .product-image { width: 100%; max-width: 400px; border-radius: 10px; box-shadow: 0 4px 15px rgba(0,0,0,0.1); }
      .product-details { background: white; padding: 30px; border-radius: 10px; box-shadow: 0 4px 15px rgba(0,0,0,0.1); }
      .product-title { font-size: 32px; color: #333; margin-bottom: 10px; font-weight: bold; }
      .product-price { font-size: 24px; color: #ff6600; font-weight: bold; margin-bottom: 15px; }
      .product-description { color: #666; margin-bottom: 30px; line-height: 1.6; font-size: 16px; }
      .selection-section { margin: 30px 0; border-bottom: 1px solid #eee; padding-bottom: 20px; }
      .selection-section:last-child { border-bottom: none; }
      .section-title { font-size: 18px; font-weight: bold; color: #333; margin-bottom: 15px; }
      .option-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 10px; }
      .option-button { padding: 15px; border: 3px solid #ddd; border-radius: 8px; text-align: center; background: white; cursor: pointer; transition: all 0.3s ease; color: #333; font-size: 14px; font-family: inherit; min-height: 60px; display: flex; align-items: center; justify-content: center; flex-direction: column; }
      .option-button:hover { border-color: #ff6600; transform: translateY(-2px); box-shadow: 0 4px 8px rgba(255,102,0,0.2); }
      .option-button.selected { background: #ff6600; color: white; border-color: #ff6600; font-weight: bold; }
      .flavor-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(120px, 1fr)); gap: 8px; }
      .flavor-button { padding: 12px 8px; border: 2px solid #ddd; border-radius: 6px; text-align: center; background: white; cursor: pointer; transition: all 0.3s ease; font-size: 13px; color: #333; font-family: inherit; min-height: 45px; display: flex; align-items: center; justify-content: center; }
      .flavor-button:hover { border-color: #28a745; transform: translateY(-1px); }
      .flavor-button.selected { background: #28a745; color: white; border-color: #28a745; font-weight: bold; }
      .quantity-controls { display: flex; align-items: center; gap: 15px; }
      .qty-btn { width: 40px; height: 40px; border: 2px solid #ff6600; background: white; color: #ff6600; border-radius: 50%; cursor: pointer; font-size: 18px; font-weight: bold; font-family: inherit; transition: all 0.3s ease; }
      .qty-btn:hover { background: #ff6600; color: white; transform: scale(1.1); }
      .qty-input { width: 80px; text-align: center; padding: 10px; border: 2px solid #ddd; border-radius: 5px; font-size: 16px; font-family: inherit; }
      .comments-textarea { width: 100%; padding: 12px; border: 2px solid #ddd; border-radius: 5px; resize: vertical; font-family: inherit; font-size: 14px; line-height: 1.4; }
      .comments-textarea:focus { border-color: #ff6600; outline: none; }
      .add-to-cart-btn { width: 100%; padding: 18px; background: #ff6600; color: white; border: none; border-radius: 8px; font-size: 18px; font-weight: bold; cursor: pointer; margin-top: 20px; font-family: inherit; transition: all 0.3s ease; }
      .add-to-cart-btn:hover { background: #e55a00; transform: translateY(-2px); box-shadow: 0 4px 12px rgba(255,102,0,0.3); }
      .add-to-cart-btn:disabled { background: #ccc; cursor: not-allowed; transform: none; box-shadow: none; }
      .success-message { background: #d4edda; color: #155724; padding: 15px; border-radius: 5px; margin: 15px 0; border: 1px solid #c3e6cb; display: none; font-size: 14px; line-height: 1.4; }
      .success-message.show { display: block; }
      .cart-status { position: fixed; top: 20px; right: 20px; background: #ff6600; color: white; padding: 10px 15px; border-radius: 25px; font-weight: bold; z-index: 1000; box-shadow: 0 4px 12px rgba(255,102,0,0.3); }
      .info-box { background: #e7f3ff; padding: 15px; border-radius: 8px; margin-bottom: 15px; color: #333; font-size: 14px; line-height: 1.4; }

      @media (max-width: 768px) {
        .product-grid { grid-template-columns: 1fr; }
        .option-grid { grid-template-columns: repeat(2, 1fr); }
        .flavor-grid { grid-template-columns: repeat(2, 1fr); }
        .product-details { padding: 20px; }
      }
    </style>

    <!-- Expose rotation flavors + variant id to JS (page metafield override, else theme setting, else defaults) -->
    <script>
      window.THC_SHOTS_VARIANT_ID = {{ page.metafields.custom.shots_variant_id | default: settings.thc_shots_variant_id | json }};
      window.THC_ROTATION_FLAVORS = [
        {{ page.metafields.custom.thc_flavor_1 | default: settings.thc_drinks_flavor_1 | default: 'Banana Runtz' | json }},
        {{ page.metafields.custom.thc_flavor_2 | default: settings.thc_drinks_flavor_2 | default: 'Pink Starburst' | json }},
        {{ page.metafields.custom.thc_flavor_3 | default: settings.thc_drinks_flavor_3 | default: 'Vanilla Lavender' | json }},
        {{ page.metafields.custom.thc_flavor_4 | default: settings.thc_drinks_flavor_4 | default: 'Watermelon Cherry' | json }}
      ].filter(Boolean);
    </script>
  </head>

  <body>
    <div class="header">WTF | Welcome To Florida</div>
    <div class="cart-status" id="cart-status">Cart: <span id="cart-count">0</span> items</div>

    <div class="container">
      <a href="/" class="back-link">‚Üê Back to Menu</a>

      <div class="product-grid">
        <div class="product-image-section">
          <img src="{{ 'thc-shots_150x150.png' | asset_url }}" alt="THC Shots" class="product-image">
        </div>

        <div class="product-details">
          <h1 class="product-title">THC Shots</h1>
          <div class="product-price" id="product-price">$4.00 per shot</div>
          <p class="product-description">
            Quick and potent THC shots for experienced users. Each shot contains 2mg of premium THC. Must be 21+ with
            valid ID.
          </p>

          <!-- Size (Single vs Flight) -->
          <div class="selection-section">
            <h3 class="section-title">ü•É Choose Your Shots</h3>
            <div class="info-box">
              <strong>THC Shots:</strong> 1 oz shots with 2mg THC each. Must be 21+ with valid ID. Flavors mirror the
              current THC Drinks rotation.
            </div>
            <div class="option-grid" id="size-options">
              <button type="button" class="option-button" data-size="Single Shot" data-price="4.00">
                Single Shot (2mg THC) - $4.00
              </button>
              <button type="button" class="option-button" data-size="Flight of 4" data-price="12.00">
                Flight of 4 (4√ó2mg) - $12.00
              </button>
            </div>
          </div>

          <!-- Flavors (always 4, synced to THC Drinks rotation) -->
          <div class="selection-section">
            <h3 class="section-title">üçπ Choose Your Flavor(s)</h3>
            <div class="flavor-grid" id="flavor-grid">
              <!-- Injected by JS from THC_ROTATION_FLAVORS -->
            </div>
          </div>

          <div class="selection-section">
            <h3 class="section-title">üí¨ Special Requests & Comments</h3>
            <textarea
              id="order-comments"
              class="comments-textarea"
              placeholder="Any special requests or modifications? We'll try to accommodate!"
              rows="3"
            ></textarea>
          </div>

          <div class="selection-section">
            <h3 class="section-title">üî¢ Quantity</h3>
            <div class="quantity-controls">
              <button type="button" class="qty-btn" onclick="changeQuantity(-1)">‚àí</button>
              <input type="number" id="quantity" value="1" min="1" max="50" class="qty-input">
              <button type="button" class="qty-btn" onclick="changeQuantity(1)">+</button>
            </div>
          </div>

          <div id="success-message" class="success-message"></div>

          <button type="button" id="add-to-cart-btn" class="add-to-cart-btn" onclick="addToCart()">
            Add to Cart - $4.00
          </button>
        </div>
      </div>
    </div>

    <script>
      // ---------- State ----------
      let selectedSize = null; // "Single Shot" or "Flight of 4"
      let selectedFlavors = []; // array of strings
      let basePrice = 4.0; // updates from size choice

      // ---------- Utilities ----------
      function getQty() {
        return Math.max(1, Math.min(50, parseInt(document.getElementById('quantity').value || '1')));
      }
      function money(n) {
        return Number(n).toFixed(2);
      }
      function getTotal() {
        return basePrice * getQty();
      }

      function updatePriceUI() {
        const priceEl = document.getElementById('product-price');
        const btn = document.getElementById('add-to-cart-btn');
        priceEl.textContent = '$' + money(basePrice) + (selectedSize === 'Flight of 4' ? ' per flight' : ' per shot');
        btn.textContent = 'Add to Cart - $' + money(getTotal());
      }

      function changeQuantity(delta) {
        const input = document.getElementById('quantity');
        const next = Math.max(1, Math.min(50, (parseInt(input.value) || 1) + delta));
        input.value = next;
        updatePriceUI();
      }

      async function updateCartCount() {
        try {
          const r = await fetch('/cart.js', { credentials: 'same-origin' });
          if (r.ok) {
            const cart = await r.json();
            document.getElementById('cart-count').textContent = cart.item_count || 0;
            return;
          }
        } catch (e) {}
        // Fallback to localStorage used elsewhere
        try {
          const local = JSON.parse(localStorage.getItem('wtf-cart') || '[]');
          document.getElementById('cart-count').textContent = local.length;
        } catch {
          document.getElementById('cart-count').textContent = '0';
        }
      }

      function validate() {
        if (!selectedSize) {
          alert('‚ùó Please choose Single Shot or Flight of 4.');
          return false;
        }
        if (selectedFlavors.length === 0) {
          alert('‚ùó Please choose at least one flavor.');
          return false;
        }
        // Auto-default: if Flight of 4 and fewer than 4 flavors are selected, duplicate the last picked to make 4
        if (selectedSize === 'Flight of 4') {
          while (selectedFlavors.length < 4) {
            selectedFlavors.push(selectedFlavors[selectedFlavors.length - 1]);
          }
          if (selectedFlavors.length > 4) {
            selectedFlavors = selectedFlavors.slice(0, 4);
          }
        }
        return true;
      }

      // ---------- Wiring ----------
      function renderFlavors() {
        const holder = document.getElementById('flavor-grid');
        holder.innerHTML = '';
        (window.THC_ROTATION_FLAVORS || []).forEach((name) => {
          const btn = document.createElement('button');
          btn.type = 'button';
          btn.className = 'flavor-button';
          btn.textContent = name;
          btn.addEventListener('click', () => {
            const idx = selectedFlavors.indexOf(name);
            if (idx > -1) {
              selectedFlavors.splice(idx, 1);
              btn.classList.remove('selected');
            } else {
              // allow multi-select (shots can be flavored per pour; flight needs up to 4)
              selectedFlavors.push(name);
              btn.classList.add('selected');
            }
          });
          holder.appendChild(btn);
        });
      }

      function wireSizeButtons() {
        document.querySelectorAll('#size-options .option-button').forEach((btn) => {
          btn.addEventListener('click', () => {
            document.querySelectorAll('#size-options .option-button').forEach((b) => b.classList.remove('selected'));
            btn.classList.add('selected');
            selectedSize = btn.dataset.size;
            const p = parseFloat(btn.dataset.price || '0');
            basePrice = isNaN(p) ? basePrice : p;

            // If user picks flight, auto-default to selecting all available flavors (UX sugar)
            if (selectedSize === 'Flight of 4' && selectedFlavors.length === 0) {
              // Preselect the first flavor button visually and in state (up to 4)
              const flavorBtns = Array.from(document.querySelectorAll('#flavor-grid .flavor-button')).slice(0, 4);
              flavorBtns.forEach((b) => {
                b.classList.add('selected');
                if (!selectedFlavors.includes(b.textContent.trim())) selectedFlavors.push(b.textContent.trim());
              });
            }

            updatePriceUI();
          });
        });

        // Select default: Single Shot
        const first = document.querySelector('#size-options .option-button');
        if (first) first.click();
      }

      // ---------- Add to Cart ----------
      async function addToCart() {
        if (!validate()) return;

        const btn = document.getElementById('add-to-cart-btn');
        const original = btn.textContent;
        btn.textContent = '‚è≥ Adding...';
        btn.disabled = true;

        const variantId = window.THC_SHOTS_VARIANT_ID;
        const quantity = getQty();
        const comments = (document.getElementById('order-comments').value || '').trim();

        const properties = {
          Size: selectedSize,
          Flavors: selectedFlavors.join(', '),
          Comments: comments,
        };

        try {
          if (variantId) {
            const body = new URLSearchParams();
            body.set('id', String(variantId));
            body.set('quantity', String(quantity));
            Object.keys(properties).forEach((k) => {
              const v = properties[k];
              if (v !== '' && v != null) body.set(`properties[${k}]`, String(v));
            });

            const res = await fetch('/cart/add.js', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
                Accept: 'application/json',
              },
              credentials: 'same-origin',
              body,
            });
            if (!res.ok) {
              let msg = 'Add to cart failed';
              try {
                const data = await res.json();
                msg = data.description || data.message || msg;
              } catch {}
              throw new Error(msg);
            }
          } else {
            // Dev fallback ‚Äî localStorage cart
            const order = {
              id: 'thc-shots-' + Date.now() + '-' + Math.random().toString(36).slice(2),
              product: 'THC Shots',
              ...properties,
              quantity,
              price: money(getTotal()),
              timestamp: new Date().toISOString(),
              dateAdded: new Date().toLocaleDateString(),
            };
            let cart = [];
            try {
              cart = JSON.parse(localStorage.getItem('wtf-cart') || '[]');
            } catch {}
            cart.push(order);
            localStorage.setItem('wtf-cart', JSON.stringify(cart));
          }

          await updateCartCount();

          const success = document.getElementById('success-message');
          success.innerHTML =
            `‚úÖ <strong>Added to cart!</strong><br>
             ü•É THC Shots<br>
             üìè Size: ${properties['Size']}<br>
             üçπ Flavors: ${properties['Flavors'] || '‚Äî'}<br>` +
            (comments ? `üí¨ ${comments}<br>` : '') +
            `üî¢ Qty: ${quantity}`;
          success.classList.add('show');
          success.scrollIntoView({ behavior: 'smooth', block: 'center' });

          document.dispatchEvent(new CustomEvent('shots:added', { detail: { variantId, ...properties, quantity } }));
        } catch (err) {
          console.error('Add to cart error:', err);
          alert('‚ùå ' + (err && err.message ? err.message : 'Error adding to cart. Please try again.'));
        } finally {
          setTimeout(() => {
            btn.textContent = original;
            btn.disabled = false;
            document.getElementById('success-message').classList.remove('show');
          }, 4000);
        }
      }

      // ---------- Boot ----------
      document.addEventListener('DOMContentLoaded', () => {
        renderFlavors();
        wireSizeButtons();
        updateCartCount();
        updatePriceUI();

        // Live updates on manual quantity edit
        const q = document.getElementById('quantity');
        if (q) q.addEventListener('input', updatePriceUI);
      });
    </script>
  </body>
</html>
